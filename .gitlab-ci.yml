image: "python:3.9-buster"

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  key:
    files:
      - requirements.txt
      - requirements-test.txt
      - requirements-pyterrier.txt
      - requirements-pyserini.txt
      - .gitlab-ci.yml
    prefix: ${CI_JOB_NAME}
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V
  - python -m pip install --upgrade pip
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate

"🏗️ Python wheel":
  stage: build
  script:
    - pip install build twine
    - python -m build
    - twine check dist/*

"🔍 Python code format":
  stage: test
  script:
    - pip install .
    - pip install .[test]
    - flake8 ir_axioms/ tests/ examples/

"🔍 Python Lint":
  stage: test
  script:
    - pip install .
    - pip install .[test]
    - pylint -E ir_axioms tests.unit examples --ignore-paths=^ir_axioms.backend

"🔍 Python Lint backend":
  stage: test
  parallel:
    matrix:
      - backend:
          - pyserini
          - pyterrier
  script:
    - apt-get update && apt-get upgrade && apt-get install openjdk-11-jre
    - pip install .
    - pip install .[test]
    - pip install .[${backend}]
    - pylint -E ir_axioms.backend.${backend} tests.integration.${backend}

"🧪 Python unit tests":
  stage: test
  script:
    - pip install .
    - pip install .[test]
    - pytest ir_axioms/ tests/unit/ examples/ --ignore=ir_axioms/backend/

"🧪 Python integration tests":
  stage: test
  parallel:
    matrix:
      - backend:
          - pyserini
          - pyterrier
  script:
    - apt-get update && apt-get upgrade && apt-get install openjdk-11-jre
    - pip install .
    - pip install .[test]
    - pip install .[${backend}]
    - pytest tests/integration/${backend}/
