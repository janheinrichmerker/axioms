name: CI

on:
  push:

jobs:
  build-wheel:
    name: "🏗️ Python wheel"
    strategy:
      matrix:
        os:
          - ubuntu-latest
#          - macos-latest
#          - windows-latest
        python:
          - 3.8
          - 3.9
    runs-on: ${{ matrix.os }}
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "🧰 Install Python"
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          cache: pip
      - name: "🧰 Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install -e .
      - name: "🏗️ Build Python wheel"
        run: python -m build
      - name: "📤 Upload Python wheel"
        uses: actions/upload-artifact@v2
        with:
          path: talk/short-talk.pdf
          name: Wheel (${{ matrix.python }}, ${{ matrix.os }})
  code-format:
    name: "🔍 Python code format"
    needs:
      - build-wheel
    strategy:
      matrix:
        os:
          - ubuntu-latest
#          - macos-latest
#          - windows-latest
        python:
          - 3.8
          - 3.9
    runs-on: ${{ matrix.os }}
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "🧰 Install Python"
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          cache: pip
      - name: "🧰 Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -e .[test]
      - name: "🔍 Check Python code format"
        run: flake8
  lint:
    name: "🔍 Python Lint"
    needs:
      - build-wheel
    strategy:
      matrix:
        os:
          - ubuntu-latest
#          - macos-latest
#          - windows-latest
        python:
          - 3.8
          - 3.9
    runs-on: ${{ matrix.os }}
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "🧰 Install Python"
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          cache: pip
      - name: "🧰 Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -e .[test]
      - name: "🔍 Lint Python code"
        run: pylint -E ir_axioms
  unit-tests:
    name: "🧪 Python unit tests"
    needs:
      - build-wheel
    strategy:
      matrix:
        os:
          - ubuntu-latest
#          - macos-latest
#          - windows-latest
        python:
          - 3.8
          - 3.9
    runs-on: ${{ matrix.os }}
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "🧰 Install Python"
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          cache: pip
      - name: "🧰 Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -e .[test]
      - name: "🧪 Test Python code"
        run: pytest --ignore=tests/integration/
  integration-tests:
    name: "🧪 Python integration tests"
    needs:
      - build-wheel
    strategy:
      matrix:
        os:
          - ubuntu-latest
#          - macos-latest
#          - windows-latest
        python:
          - 3.8
          - 3.9
        backend:
          - pyserini
          - pyterrier
    runs-on: ${{ matrix.os }}
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "🧰 Install Python"
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          cache: pip
      - name: "🧰 Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -e .[test]
          pip install ${{ matrix.backend }}
      - name: "🧰 Install Pyserini"
        run: pip install pyserini
        if: ${{ matrix.backend == 'pyserini' }}
      - name: "🧰 Install PyTerrier"
        run: pip install python-terrier
        if: ${{ matrix.backend == 'pyterrier' }}
      - name: "🧪 Test Python code"
        run: pytest tests/integration/test_${{ matrix.backend }}.py
